title: CPU notes
summary:
CPI: Cycle Per Instruction
IPC: Instruction Per Cycle
ILP: instruction-level parallelism
Clock Speed is limited by the length of longest, slowest stage in pipeline; subdividing long stage will raise latency, but throughput better.
processor's width: the number of instructions able to issued, executed, or completed per cycle
superpipeline: split pipeline into more stages
superscalar: add more function units, which allow more instructions in parallel at each stage.
DSP: digital signal processors
VLIW: Very Long Instruction Word
instruction's latency: The number of cycles between when an instruction reaches the execute stage 
                       and when its result is available for use by other instructions
hurdle for pipeline: branches, instruction dependencies&latency

instruction scheduling:
out-of-order execution: Doing dynamic instruction scheduling (reordering) in the processor means the dispatch logic must be enhanced 
                        to look at groups of instructions and dispatch them out of order as best it can to use the processor's functional units
register renaming: processor keep a mapping of the instructions in flight at any moment and the physical registers they use
OOO logic consumes lot of power for a relatively small performance gain, which limited it only appear at high-performance processor, not lower-power.

the brainiac vs speed-demon:
Brainiac: smart-machine end of the spectrum, with lots of OOO hardware, instruction-level parallelism;
          costs millions of logic transistors and years of design effort to do it
speed-demon: simpler and smaller, relying on a smart compiler and willing to sacrifice a little bit of instruction-level parallelism
            run at higher clock speeds, but clock speed is limited mainly by power and thermal issues

power wall:  it's simply not possible to provide that much power and cooling to a silicon chip in any practical fashion,
              even if the circuits could, in fact, operate at higher clock speeds.
ILP wall: combination of load latencies, cache misses, branches and dependencies between instructions
memory wall: latency to access memory is too high





