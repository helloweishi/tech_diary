title: Capabilities
link: https://dfir.ch/posts/linux_capabilities/
tag: cap, Linux
status: done
summary:
capabilities query:
```
# cat /proc/sys/kernel/cap_last_cap
40
# capsh --print
Current: =ep
Bounding set =cap_chown,cap_dac_override,cap_dac_read_search,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_linux_immutable,cap_net_bind_service,cap_net_broadcast,cap_net_admin,cap_net_raw,cap_ipc_lock,cap_ipc_owner,cap_sys_module,cap_sys_rawio,cap_sys_chroot,cap_sys_ptrace,cap_sys_pacct,cap_sys_admin,cap_sys_boot,cap_sys_nice,cap_sys_resource,cap_sys_time,cap_sys_tty_config,cap_mknod,cap_lease,cap_audit_write,cap_audit_control,cap_setfcap,cap_mac_override,cap_mac_admin,cap_syslog,cap_wake_alarm,cap_block_suspend,cap_audit_read,cap_perfmon,cap_bpf,cap_checkpoint_restore
```
setcap sets file capabilities on an executable
e: Effective means the capability is activated
p: Permitted means the capability can be used/is allowed.
```
  # setcap cap_setuid+ep /usr/bin/python3.12
  # cat /usr/include/linux/capability.h
  //Enumerating all binaries with capabilities set
  # getcap -r / 2>/dev/null
```
  
```
  # cat /proc/1143966/status | grep Cap
CapInh = Inherited capabilities
CapPrm = Permitted capabilities
CapEff = Effective capabilities
CapBnd = Bounding set
CapAmb = Ambient capabilities set
# capsh --decode=0000000000000080
0x0000000000000080=cap_setuid
# getpcaps 1143966
Capabilities for `1143966': = cap_setuid+ep
//Remove the capabilities from a binary with setcap -r
# setcap -r /usr/bin/python3.12
```
